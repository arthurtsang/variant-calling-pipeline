rule preprocess:
  input: "output/dedup_reads.bam.bai"
  output: touch( "output/preprocessed" )

rule align_reads:
  """Alignment - Map to Reference
   Need to provide the -M flag to BWA, this tells it to consider split reads as secondary, need this for GATK variant calling/Picard support. Alternate alignment tools: Bowtie2, Novoalign
   Readgroup info is provided with the -R flag. This information is key for downstream GATK functionality. GATK will not work without a read group tag.
  """
  conda: "conda.yml"
  input: 
    fastq=expand( "{dir}/{exp}_{read}.fastq.gz", dir = [ FASTQDIR ], exp = [ EXPERIMENT ], read = ["1", "2"]),
    initialized="output/initialized"
  output: temp( "output/aligned_reads.sam" )
  threads: 2
  shell: "bwa mem -t {threads} -M -R '@RG\\tID:$file\\tLB:$file\\tPL:$PL\\tPM:$PM\\tSM:$file' {REF} {input.fastq} > {output}"

rule sort_sam:
  """Sort SAM file by coordinate, convert to BAM"""
  conda: "conda.yml"
  input: rules.align_reads.output
  output: temp( "output/sorted_reads.bam" )
  shell: "picard SortSam INPUT={input} OUTPUT={output} SORT_ORDER=coordinate"

rule alignment_metrics:
  """Collect Alignment & Insert Size Metrics"""
  conda: "conda.yml"
  input: rules.sort_sam.output
  output:
    alignment= "output/alignment_metrics.txt",
    insert="output/insert_metrics.txt",
    depth="output/depth_out.txt",
    histogram="output/insert_size_histogram.pdf"
  shell:
    """
      picard CollectAlignmentSummaryMetrics R={REF} I={input} O={output.alignment}
      picard CollectInsertSizeMetrics I={input} O={output.insert} H={output.histogram}
      samtools depth -a {input} > {output.depth}
    """

rule dedup:
  """Mark duplicates"""
  conda: "conda.yml"
  input: rules.sort_sam.output
  output: 
    dedup= temp( "output/dedup_reads.bam" ),
    metrics= "output/metrics.txt"
  shell: "picard MarkDuplicates I={input} O={output.dedup} M={output.metrics}"

rule build_bam_index:
  """Build BAM index"""
  conda: "conda.yml"
  input: rules.dedup.output.dedup
  output: "output/dedup_reads.bam.bai"
  shell: "samtools index {input}"
